#include <main.h>
#include <lcd.c>
#include <Built_in.h>
char A[12];
int i=0, j=0;
char THE[6] ={0x43,0xA8,0xF2,0x02};
char MOC[6] ={0xAA,0x61,0xDF,0x80};

//MOTOR
#define IN1 PIN_C6
#define IN2 PIN_C5
#define IN3 PIN_C4
#define IN4 PIN_D3

//RFID


int1 quet(char Data[],char UID[] )   //Chuong trinh so sanh the, moc khoa co hop le khong
{
   for (int i = 0; i < 4; i++)                  
   {   
      if(UID[i]== Data[i] )
      {                                   
         j=1; 
      } 
      else                                             
      {
         j=0;
         break;
      }        
   } 
   return j;
}  

//LCD
#define LCD_ENABLE_PIN  PIN_D0                        
#define LCD_RS_PIN PIN_D1  
#define LCD_RW_PIN PIN_D2 
#define LCD_DATA4 PIN_D4 
#define LCD_DATA5 PIN_D5 
#define LCD_DATA6 PIN_D6 
#define LCD_DATA7 PIN_D7 


void LCD_Enable(void)
{
   output_high(LCD_ENABLE_PIN);
   delay_us(3);
   output_low(LCD_ENABLE_PIN);
   delay_us(50);
}

void LCD_Send4Bit(unsigned char Data)  //Chuyen 4 bit len chan d4 -> d6
{
   output_bit(LCD_DATA4,Data&&0x01);
   output_bit(LCD_DATA5,(Data>>1)&&1);
   output_bit(LCD_DATA6,(Data>>2)&&1);
   output_bit(LCD_DATA7,(Data>>3)&&1);
}

void LCD_SendCommand(unsigned char command)  //chuyen ma lenh len chan data LCD
{
   output_low(LCD_RS_PIN);
   LCD_Send4Bit(command>>4);
   LCD_Enable();
   LCD_Send4Bit(command);
   LCD_Enable();
}

void LCD_Clear()  //xoa man hinh LCD
{
   LCD_SendCommand(0x01);
   delay_ms(10);
}


// KEYPAD
#define COL1 pin_B1
#define COL2 pin_B2
#define COL3 pin_B3
#define ROW1 pin_B4
#define ROW2 pin_B5
#define ROW3 pin_B6
#define ROW4 pin_B7

void key_init(void)  //kich hoat keypad
{
   output_drive(COL1);
   output_drive(COL2);
   output_drive(COL3);
   output_float(ROW1);
   output_float(ROW2);
   output_float(ROW3);
   output_float(ROW4);
}


void quet_phim()    //tra ve gia tri nut
{
   output_b(0b11111101);
   if(!input(ROW1))         //nut 1
   {
      delay_ms(5);
      while(!input(ROW1))
      {
         i++;
         A[i]= 1;
         lcd_putc("1");
         while(!input(ROW1))  {};

      }
      
   }
   if(!input(ROW2))         //nut 4
   {
      delay_ms(5);
      while(!input(ROW2))
      {
         i++;
         A[i]= 4;
         lcd_putc("4");
         while(!input(ROW2))  {};
      }
      
   }
   if(!input(ROW3))         //nut 7
   {
      delay_ms(5);
      while(!input(ROW3))
      {
         A[i]= 7;
         lcd_putc("7");
         while(!input(ROW3))  {};
      }
   }
   if(!input(ROW4))         //nut *
   {
      delay_ms(5);
      while(!input(ROW4))
      {
         i++;
         A[i]= '*';
         while(!input(ROW4))  {};
      }
   }
   output_b(0b11111011);
   if(!input(ROW1))         //nut 2
   {
      delay_ms(5);
      while(!input(ROW1))
      {
         i++;
         A[i]= 2;
         lcd_putc("2");
         while(!input(ROW1))  {};
      }
   }
   if(!input(ROW2))         //nut 5
   {
      delay_ms(5);
      while(!input(ROW2))
      {
         i++;
         A[i]= 5;
         lcd_putc("5");
         while(!input(ROW2))  {};
      }
   }
   if(!input(ROW3))         //nut 8
   {
      delay_ms(5);
      while(!input(ROW3))
      {
         i++;
         A[i]= 8;
         lcd_putc("8");
         while(!input(ROW3))  {};
      }
   }
   if(!input(ROW4))         //nut 0
   {
      delay_ms(5);
      while(!input(ROW4))
      {
         i++;
         A[i]= 0;
         lcd_putc("0");
         while(!input(ROW4))  {};
      }
   }
   output_b(0b11110111);
   if(!input(ROW1))         //nut 3
   {
      delay_ms(5);
      while(!input(ROW1))
      {
         i++;
         A[i]= 3;
         lcd_putc("3");
         while(!input(ROW1))  {};
      }
   }
   if(!input(ROW2))         //nut 6
   {
      delay_ms(5);
      while(!input(ROW2))
      {
         i++;
         A[i]= 6;
         lcd_putc("6");
         while(!input(ROW2))  {};
      }
   }
   if(!input(ROW3))         //nut 9
   {
      delay_ms(5);
      while(!input(ROW3))
      {
         i++;
         A[i]= 9;
         lcd_putc("9");
         while(!input(ROW3))  {};
      }
   }
   if(!input(ROW4))         //nut #
   {
      delay_ms(5);
      while(!input(ROW4))
      {
         i++;
         A[i]= '#';
         while(!input(ROW4))  {};
      }
   }
   
}

void motor()   //Chuong trinh dieu khien dong co
{
   output_high(IN1);
   output_low(IN2);
   output_high(IN4);
   output_low(IN3);
   delay_ms(3000);
   output_low(IN1);
   output_low(IN2);
   output_low(IN3);
   output_low(IN4);
   delay_ms(3000);
   output_low(IN1);
   output_high(IN2);
   output_low(IN4);
   output_high(IN3);
   delay_ms(3000);
   output_low(IN1);
   output_low(IN2); 
   output_low(IN3);
   output_low(IN4);
   for(i=1;i<8;i++)
   {
      A[i]=0;
   }
}

void main()
{
   char UID[6];
   unsigned int TagType;
   lcd_init ();
   MFRC522_Init();
   set_tris_c(0x00);
   set_tris_d(0x00);
   lcd_putc("PASS:");
   lcd_gotoxy(7,1);
   output_c(0x00);
   while(TRUE)
   {
      quet_phim();
      if(A[1]==1 && A[2]==2 && A[3]==3 && A[4]==4 && A[5]==5 && A[6]==6 && A[7]=='*')  
      {
         lcd_gotoxy(2,1);
         lcd_putc("CORRECT PASS");
         motor();
         goto reset;
      }
      if(A[1]!=1 && A[i]=='*')  
      {
         lcd_gotoxy(1,2);
         lcd_putc("WRONG PASS");
         delay_ms(2000);
         reset_cpu();
      }
      if(A[2]!=2 && A[i]=='*')  
      {
         lcd_gotoxy(1,2);
         lcd_putc("WRONG PASS");
         delay_ms(2000);
         reset_cpu();
      }
      if(A[3]!=3 && A[i]=='*')  
      {
         lcd_gotoxy(1,2);
         lcd_putc("WRONG PASS");
         delay_ms(2000);
         reset_cpu();
      }
      if(A[4]!=4 && A[i]=='*')  
      {
         lcd_gotoxy(1,2);
         lcd_putc("WRONG PASS");
         delay_ms(2000);
         reset_cpu();
      }
      if(A[5]!=5 && A[i]=='*')  
      {
         lcd_gotoxy(1,2);
         lcd_putc("WRONG PASS");
         delay_ms(2000);
         reset_cpu();
      }
      if(A[6]!=6 && A[i]=='*')  
      {
         lcd_gotoxy(1,2);
         lcd_putc("WRONG PASS");
         delay_ms(2000);
         reset_cpu();
      }
      if(A[i]=='#')  reset_cpu();
      if(MFRC522_isCard (&TagType))
      {
         if (MFRC522_ReadCardSerial (&UID))
         {
            if(quet(THE,UID)||quet(MOC,UID))
            {
               lcd_gotoxy(1,2);
               lcd_putc("CORRECT");
               motor();
               goto reset;
            }
            else
            {
               lcd_gotoxy(2,1);
               lcd_putc("WRONG");
            }
         }
      }
   }
reset:
   {
      LCD_Clear();
      lcd_putc("PASS:\n*.OK   #.RESET");
      i=0;
      lcd_gotoxy(7,1);
      while(TRUE)
      {
         quet_phim();
         if(A[1]==1 && A[2]==2 && A[3]==3 && A[4]==4 && A[5]==5 && A[6]==6 && A[7]=='*')  
         {
            motor();
            goto reset;
         }
         if(A[i]=='#')  reset_cpu();
      }
   }
}

