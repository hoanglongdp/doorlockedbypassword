CCS PCM C Compiler, Version 5.092, 5967               07-Apr-21 12:28

               Filename:   D:\TestProject\TestPic\TestPic.lst

               ROM used:   43 words (1%)
                           Largest free fragment is 2048
               RAM used:   6 (2%) at main() level
                           6 (2%) worst case
               Stack used: 0 locations
               Stack size: 8

0000:  MOVLW  00
0001:  MOVWF  0A
0002:  GOTO   004
0003:  NOP
.................... #include <TestPic.h>
.................... #include <16F877A.h>
.................... //////////// Standard Header file for the PIC16F877A device ////////////////
.................... ///////////////////////////////////////////////////////////////////////////
.................... ////        (C) Copyright 1996, 2014 Custom Computer Services          ////
.................... //// This source code may only be used by licensed users of the CCS C  ////
.................... //// compiler.  This source code may only be distributed to other      ////
.................... //// licensed users of the CCS C compiler.  No other use, reproduction ////
.................... //// or distribution is permitted without written permission.          ////
.................... //// Derivative programs created using this software in object code    ////
.................... //// form are not restricted in any way.                               ////
.................... ///////////////////////////////////////////////////////////////////////////
.................... #device PIC16F877A
.................... 
.................... #list
.................... 
.................... #device ADC=10
.................... #use delay(crystal=20000000)
.................... 
.................... 
.................... 
.................... void main()
0004:  MOVF   03,W
0005:  ANDLW  1F
0006:  MOVWF  03
0007:  MOVLW  FF
0008:  MOVWF  20
0009:  BSF    03.5
000A:  BSF    1F.0
000B:  BSF    1F.1
000C:  BSF    1F.2
000D:  BCF    1F.3
000E:  MOVLW  07
000F:  MOVWF  1C
0010:  BCF    03.7
.................... {
....................    set_tris_c(0x00);
0011:  MOVLW  00
0012:  MOVWF  07
0013:  BCF    03.5
0014:  MOVWF  20
....................    set_tris_b(0x00);
0015:  BSF    03.5
0016:  MOVWF  06
....................    set_tris_d(0x00);
0017:  MOVWF  08
....................    
....................    
....................    while(TRUE)
....................    {
....................    output_c(0xff);
0018:  MOVLW  00
0019:  BCF    03.5
001A:  MOVWF  20
001B:  BSF    03.5
001C:  CLRF   07
001D:  MOVLW  FF
001E:  BCF    03.5
001F:  MOVWF  07
....................    output_d(0xff);
0020:  BSF    03.5
0021:  CLRF   08
0022:  BCF    03.5
0023:  MOVWF  08
....................    output_b(0xff);
0024:  BSF    03.5
0025:  CLRF   06
0026:  BCF    03.5
0027:  MOVWF  06
0028:  BSF    03.5
0029:  GOTO   018
.................... 
....................       //TODO: User Code
....................    }
.................... 
.................... }
002A:  SLEEP

Configuration Fuses:
   Word  1: 3F72   HS NOWDT PUT BROWNOUT NOLVP NOCPD NOWRT NODEBUG NOPROTECT
